<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Scans within the base package of the application for @Components to 
		configure as beans -->
	<context:component-scan base-package="com.bleum.canton.*.service" />
	<context:component-scan base-package="com.bleum.canton.*.dao" />

	<!-- Load configuration resources -->
	<context:property-placeholder location="classpath:com/bleum/canton/jdbc-test.properties" />

	<!-- Data Sources -->
	<bean id="productDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${core.jdbc.driverClassName}" />
		<property name="url" value="${core.jdbc.url}" />
		<property name="username" value="${core.jdbc.username}" />
		<property name="password" value="${core.jdbc.password}" />
		<property name="maxActive" value="${core.jdbc.maxActive}" />
		<property name="maxIdle" value="${core.jdbc.maxIdle}" />
	</bean>
	
	<bean id="storageDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${cata.jdbc.driverClassName}" />
		<property name="url" value="${cata.jdbc.url}" />
		<property name="username" value="${cata.jdbc.username}" />
		<property name="password" value="${cata.jdbc.password}" />
		<property name="maxActive" value="${cata.jdbc.maxActive}" />
		<property name="maxIdle" value="${cata.jdbc.maxIdle}" />
	</bean>

	<!-- Hibernate Session Factories -->
	<bean id="productSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="productDataSource" />
		<property name="mappingResources">
			<list>
				<value>com/bleum/canton/sample/entity/Product.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
			</value>
		</property>
	</bean>
	
	<bean id="storageSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="storageDataSource" />
		<property name="mappingResources">
			<list>
				<value>com/bleum/canton/sample/entity/ProductStorage.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
			</value>
		</property>
	</bean>

	<!-- Transaction Management -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<!--  when close is called, should we force transactions to terminate or not? -->
		<property name="forceShutdown" value="true" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
	    <property name="transactionTimeout" value="300" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
	</bean>
	
	<tx:annotation-driven />

	<!-- Exception translation bean post processor -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

</beans>
